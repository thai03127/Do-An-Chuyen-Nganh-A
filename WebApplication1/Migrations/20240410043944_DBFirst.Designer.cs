// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(HotelDatabaseContext))]
    [Migration("20240410043944_DBFirst")]
    partial class DBFirst
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplication1.Models.Booking", b =>
                {
                    b.Property<int>("MaBooking")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaBooking"), 1L, 1);

                    b.Property<string>("DatCoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Gia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("GiaGiam")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("Gia Giam")
                        .IsFixedLength();

                    b.Property<string>("GiaGoc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("Gia Goc")
                        .IsFixedLength();

                    b.Property<int>("MaKh")
                        .HasColumnType("int");

                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.Property<int>("MaNv")
                        .HasColumnType("int")
                        .HasColumnName("MaNV");

                    b.Property<string>("NgayIn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("NgayIN")
                        .IsFixedLength();

                    b.Property<string>("NgayOut")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("MaBooking");

                    b.HasIndex("MaKh");

                    b.HasIndex("MaLoai");

                    b.HasIndex("MaNv");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Checkin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("MaBooking")
                        .HasColumnType("int");

                    b.Property<int>("MaNv")
                        .HasColumnType("int");

                    b.Property<int>("MaPhong")
                        .HasColumnType("int");

                    b.Property<string>("NvPv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TimeIn")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaBooking");

                    b.HasIndex("MaPhong");

                    b.ToTable("Checkin", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Dichvu", b =>
                {
                    b.Property<int>("MaDv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaDv"), 1L, 1);

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenDv")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("MaDv");

                    b.ToTable("Dichvu", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.HinhAnh", b =>
                {
                    b.Property<int>("MaHinhAnh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHinhAnh"), 1L, 1);

                    b.Property<int?>("MaLoai")
                        .HasColumnType("int");

                    b.HasKey("MaHinhAnh");

                    b.HasIndex("MaLoai");

                    b.ToTable("HinhAnh", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.HoaDon", b =>
                {
                    b.Property<int>("MaHd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaHD");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHd"), 1L, 1);

                    b.Property<int>("MaBooking")
                        .HasColumnType("int");

                    b.Property<int>("MaDv")
                        .HasColumnType("int");

                    b.Property<int>("MaKh")
                        .HasColumnType("int");

                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.Property<int>("MaNv")
                        .HasColumnType("int");

                    b.Property<int>("MaQldv")
                        .HasColumnType("int")
                        .HasColumnName("MaQLDv");

                    b.Property<double>("ThanhTien")
                        .HasColumnType("float");

                    b.HasKey("MaHd");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKh"), 1L, 1);

                    b.Property<int>("Cancuoc")
                        .HasColumnType("int");

                    b.Property<int?>("Passport")
                        .HasColumnType("int");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("TenKh")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaKh");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.LoaiPhong", b =>
                {
                    b.Property<int>("MaLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoai"), 1L, 1);

                    b.Property<double?>("DanhGia")
                        .HasColumnType("float");

                    b.Property<string>("Gia")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<double?>("GiaGiam")
                        .HasColumnType("float");

                    b.Property<double?>("GiaGoc")
                        .HasColumnType("float");

                    b.Property<double?>("GiaTreEm")
                        .HasColumnType("float");

                    b.Property<string>("Soluong")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Ten")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("MaLoai");

                    b.ToTable("LoaiPhong", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaNV");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNv"), 1L, 1);

                    b.Property<int>("Cancuoc")
                        .HasColumnType("int");

                    b.Property<string>("Chucvu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<string>("TenNv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TenNV");

                    b.HasKey("MaNv");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Phong", b =>
                {
                    b.Property<int>("MaPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaPhong"), 1L, 1);

                    b.Property<int?>("MaLoai")
                        .HasColumnType("int");

                    b.Property<string>("TenPhong")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("MaPhong");

                    b.HasIndex("MaLoai");

                    b.ToTable("Phong", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.QldichvuPhong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("MaDv")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int");

                    b.Property<string>("Soluong")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Sotien")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("MaDv");

                    b.HasIndex("MaPhong");

                    b.ToTable("QLdichvu_phong", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.TienIchPhong", b =>
                {
                    b.Property<int>("MaLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MaTn")
                        .HasColumnType("int")
                        .HasColumnName("MaTN");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("MaLoai", "MaTn");

                    b.HasIndex("MaTn");

                    b.ToTable("TienIchPhong", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.TienNghi", b =>
                {
                    b.Property<int>("MaTn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaTN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTn"), 1L, 1);

                    b.Property<string>("Den")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("Gia")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int>("MaLoai")
                        .HasColumnType("int");

                    b.HasKey("MaTn");

                    b.ToTable("TienNghi", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Booking", b =>
                {
                    b.HasOne("WebApplication1.Models.KhachHang", "MaKhNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("MaKh")
                        .IsRequired()
                        .HasConstraintName("FK_Booking_KhachHang");

                    b.HasOne("WebApplication1.Models.LoaiPhong", "MaLoaiNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("MaLoai")
                        .IsRequired()
                        .HasConstraintName("FK_Booking_LoaiPhong");

                    b.HasOne("WebApplication1.Models.NhanVien", "MaNvNavigation")
                        .WithMany("Bookings")
                        .HasForeignKey("MaNv")
                        .IsRequired()
                        .HasConstraintName("FK_Booking_NhanVien");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaLoaiNavigation");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Checkin", b =>
                {
                    b.HasOne("WebApplication1.Models.Booking", "MaBookingNavigation")
                        .WithMany("Checkins")
                        .HasForeignKey("MaBooking")
                        .IsRequired()
                        .HasConstraintName("FK_Checkin_Booking");

                    b.HasOne("WebApplication1.Models.Phong", "MaPhongNavigation")
                        .WithMany("Checkins")
                        .HasForeignKey("MaPhong")
                        .IsRequired()
                        .HasConstraintName("FK_Checkin_Phong");

                    b.Navigation("MaBookingNavigation");

                    b.Navigation("MaPhongNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.HinhAnh", b =>
                {
                    b.HasOne("WebApplication1.Models.LoaiPhong", "MaLoaiNavigation")
                        .WithMany("HinhAnhs")
                        .HasForeignKey("MaLoai")
                        .HasConstraintName("FK_HinhAnh_LoaiPhong");

                    b.Navigation("MaLoaiNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Phong", b =>
                {
                    b.HasOne("WebApplication1.Models.LoaiPhong", "MaLoaiNavigation")
                        .WithMany("Phongs")
                        .HasForeignKey("MaLoai")
                        .HasConstraintName("FK_Phong_LoaiPhong");

                    b.Navigation("MaLoaiNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.QldichvuPhong", b =>
                {
                    b.HasOne("WebApplication1.Models.Dichvu", "MaDvNavigation")
                        .WithMany("QldichvuPhongs")
                        .HasForeignKey("MaDv")
                        .HasConstraintName("FK_QLdichvu_phong_Dichvu");

                    b.HasOne("WebApplication1.Models.Phong", "MaPhongNavigation")
                        .WithMany("QldichvuPhongs")
                        .HasForeignKey("MaPhong")
                        .HasConstraintName("FK_QLdichvu_phong_Phong1");

                    b.Navigation("MaDvNavigation");

                    b.Navigation("MaPhongNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.TienIchPhong", b =>
                {
                    b.HasOne("WebApplication1.Models.LoaiPhong", "MaLoaiNavigation")
                        .WithMany("TienIchPhongs")
                        .HasForeignKey("MaLoai")
                        .IsRequired()
                        .HasConstraintName("FK_TienIchPhong_LoaiPhong");

                    b.HasOne("WebApplication1.Models.TienNghi", "MaTnNavigation")
                        .WithMany("TienIchPhongs")
                        .HasForeignKey("MaTn")
                        .IsRequired()
                        .HasConstraintName("FK_TienIchPhong_TienNghi");

                    b.Navigation("MaLoaiNavigation");

                    b.Navigation("MaTnNavigation");
                });

            modelBuilder.Entity("WebApplication1.Models.Booking", b =>
                {
                    b.Navigation("Checkins");
                });

            modelBuilder.Entity("WebApplication1.Models.Dichvu", b =>
                {
                    b.Navigation("QldichvuPhongs");
                });

            modelBuilder.Entity("WebApplication1.Models.KhachHang", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("WebApplication1.Models.LoaiPhong", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("HinhAnhs");

                    b.Navigation("Phongs");

                    b.Navigation("TienIchPhongs");
                });

            modelBuilder.Entity("WebApplication1.Models.NhanVien", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("WebApplication1.Models.Phong", b =>
                {
                    b.Navigation("Checkins");

                    b.Navigation("QldichvuPhongs");
                });

            modelBuilder.Entity("WebApplication1.Models.TienNghi", b =>
                {
                    b.Navigation("TienIchPhongs");
                });
#pragma warning restore 612, 618
        }
    }
}
